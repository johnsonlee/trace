buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

allprojects {
    buildscript {
        repositories {
            mavenLocal()
            mavenCentral()
            jcenter()
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

dependencies {
    compile gradleApi()
    compile localGroovy()

    compile 'com.android.tools.build:gradle:1.5.0'
    compile 'com.android.tools.build:transform-api:1.5.0'

    compile 'commons-io:commons-io:2.4'
    compile 'javassist:javassist:3.12.1.GA'
}

compileJava {
    sourceCompatibility = '1.7'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task signJars (type : Sign, dependsOn: [jar, javadocJar, sourcesJar]) {
    sign configurations.archives
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    required {
        (!project.POM_VERSION.endsWith('-SNAPSHOT')) && gradle.taskGraph.hasTask('publish')
    }
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId POM_GROUP_ID
            artifactId POM_ARTIFACT_ID
            version POM_VERSION
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().dependencies.'*'.findAll {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                } each {
                    it.scope*.value = 'compile'
                }

                asNode().dependencies.'*'.findAll {
                    it.groupId.text() == "com.android.tools.build"
                } each {
                    it.scope*.value = 'provided'
                }
            }

            from components.java
        }
    }
    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username OSSRH_USERNAME
                password OSSRH_PASSWORD
            }
        }
    }
}
